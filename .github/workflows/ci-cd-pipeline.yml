
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r scripts/requirements.txt

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Install Docker Compose
      run: sudo apt-get update && sudo apt-get install -y docker-compose

    - name: Stop and Remove Existing Containers
      run: |
        docker-compose down || true
        docker-compose rm -f

    - name: Build Docker images
      run: docker-compose -f docker-compose.yml build

    - name: Run Docker Compose
      run: docker-compose up -d --force-recreate --build

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Newman
      run: npm install -g newman

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Install Docker Compose
      run: sudo apt-get update && sudo apt-get install -y docker-compose

    - name: Stop and Remove Existing Containers
      run: |
        docker-compose down || true
        docker-compose rm -f

    - name: Build Docker images
      run: docker-compose -f docker-compose.yml build

    - name: Run Docker Compose
      run: docker-compose up -d --force-recreate --build

    - name: Set Base URL for External Service
      run: echo "BASE_URL=https://8c99-203-99-184-187.ngrok-free.app/" >> $GITHUB_ENV

    - name: Run Newman tests
      run: |
        newman run postman/Project.postman_collection2.json --env-var "base_url=$BASE_URL" || exit 1

  merge:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request' && github.event.action == 'closed'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install GitHub CLI
      run: sudo apt-get install -y gh

    - name: Authenticate GitHub CLI
      run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

    - name: Merge pull request
      run: |
        pr_number=$(gh pr list --state open --json number -q '.[0].number')
        gh pr merge $pr_number --merge

  deploy:
    runs-on: ubuntu-latest
    needs: merge
    if: github.ref == 'refs/heads/main' || (github.event_name == 'pull_request' && github.event.action == 'closed')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Install Docker Compose
      run: sudo apt-get update && sudo apt-get install -y docker-compose

    - name: Stop and Remove Existing Containers
      run: |
        docker-compose down || true
        docker-compose rm -f

    - name: Build Docker images
      run: docker-compose build --no-cache

    - name: Run Docker Compose
      run: docker-compose up -d --force-recreate --build

    - name: Wait for services to be ready
      run: |
        sleep 10
        curl -f http://localhost:5000/ || exit 1

