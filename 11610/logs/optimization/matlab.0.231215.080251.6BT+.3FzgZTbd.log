### libFMD: 2022/12/30 08:50 PST Setting Up GPU
### libFMD: maxNumCompThreads = 4
### libFMD: GPU memory max pool size is 1212.0 MiB.
### Loading config file /mnt/storage_d2s/d2suser06/releases/ILT.2023.02.ilt-cdp43/etc/tmilt_193i.toml.

# CostFunctional Stage CTM
### CostFunctional take FastQuantizer MRC Step before evaluate [false]
@@@ Cached 20 of 20 kernels (13277.6 MiB GPU memory available)
@@@ Cleared 640 MiB of Kernel Cache (14340 MiB GPU memory free).
@@@ Cleared Kernel Cache (14340.5 MiB GPU memory available)
### FastQuantizer mrcWidthSpaceIncrement set to 0.000000
### FastQuantizer mrcMaxCorrection set to 0.000000
### MRC Limts are width=12.5 space=12.5 area=500
### MRC Limts are width=12.5 space=12.5 area=500

# CostFunctional Stage QTM0
#   CostFunctional.mu = 0.01
#   CostFunctional.nu = 0.04
### CostFunctional take FastQuantizer MRC Step before evaluate [false]
@@@ Cached 20 of 20 kernels (13021.5 MiB GPU memory available)
@@@ Cleared 640 MiB of Kernel Cache (14340 MiB GPU memory free).
@@@ Cleared Kernel Cache (14340.5 MiB GPU memory available)
### FastQuantizer addMask set to 1

# CostFunctional Stage QTM1
#   CostFunctional.mu = 0.1
#   CostFunctional.nu = 0.4
#   FastQuantizer.inverseTransitionCoeff = 0.2
#   FastQuantizer.singlePixelCoeff = 0.1
### CostFunctional take FastQuantizer MRC Step before evaluate [true]
@@@ Cached 20 of 20 kernels (12957.5 MiB GPU memory available)
@@@ Cleared 640 MiB of Kernel Cache (14340 MiB GPU memory free).
@@@ Cleared Kernel Cache (14340.5 MiB GPU memory available)

# CostFunctional Stage QTM2_0
#   CostFunctional.mu = 0.2
#   CostFunctional.nu = 0.8
#   CostFunctional.tcSlope = 1.25
#   CostFunctional.tcUpsampleFactor = 3
#   FastQuantizer.inverseTransitionCoeff = 0.2
#   FastQuantizer.singlePixelCoeff = 0.1
#   FastQuantizer.areaCoeff = 1
### CostFunctional take FastQuantizer MRC Step before evaluate [true]
@@@ Cached 20 of 20 kernels (12957.5 MiB GPU memory available)
@@@ Cleared 640 MiB of Kernel Cache (14340 MiB GPU memory free).
@@@ Cleared Kernel Cache (14340.5 MiB GPU memory available)

# CostFunctional Stage QTM2_1
#   CostFunctional.mu = 0.2
#   CostFunctional.nu = 0.8
#   CostFunctional.tcSlope = 1.6
#   CostFunctional.tcUpsampleFactor = 3
#   FastQuantizer.inverseTransitionCoeff = 0.2
#   FastQuantizer.singlePixelCoeff = 0.1
#   FastQuantizer.areaCoeff = 1
### CostFunctional take FastQuantizer MRC Step before evaluate [true]
@@@ Cached 20 of 20 kernels (13085.5 MiB GPU memory available)
@@@ Cleared 640 MiB of Kernel Cache (14340 MiB GPU memory free).
@@@ Cleared Kernel Cache (14340.5 MiB GPU memory available)

# CostFunctional Stage QTM2_2
#   CostFunctional.mu = 0.2
#   CostFunctional.nu = 0.8
#   CostFunctional.tcSlope = 2
#   CostFunctional.tcUpsampleFactor = 3
#   FastQuantizer.inverseTransitionCoeff = 0.2
#   FastQuantizer.singlePixelCoeff = 0.1
#   FastQuantizer.areaCoeff = 1
### CostFunctional take FastQuantizer MRC Step before evaluate [true]
@@@ Cached 20 of 20 kernels (13085.5 MiB GPU memory available)
@@@ Cleared 640 MiB of Kernel Cache (14340 MiB GPU memory free).
@@@ Cleared Kernel Cache (14340.5 MiB GPU memory available)

# CostFunctional Stage QTM2
#   CostFunctional.mu = 0.2
#   CostFunctional.nu = 0.8
#   CostFunctional.tcSlope = 3
#   CostFunctional.tcUpsampleFactor = 3
#   FastQuantizer.inverseTransitionCoeff = 0.2
#   FastQuantizer.singlePixelCoeff = 0.1
#   FastQuantizer.areaCoeff = 1
### CostFunctional take FastQuantizer MRC Step before evaluate [true]
@@@ Cached 20 of 20 kernels (13085.5 MiB GPU memory available)
@@@ Cleared 640 MiB of Kernel Cache (14340 MiB GPU memory free).
@@@ Cleared Kernel Cache (14340.5 MiB GPU memory available)
### FastQuantizer areaWatershedFraction set to 0.500000
### FastQuantizer widthWatershedFraction set to 0.500000
### FastQuantizer spaceWatershedFraction set to 0.500000

# MRC Stage MRC1
#   FastQuantizer.singlePixelCoeff = 0.1
#   FastQuantizer.areaCoeff = 0.5
#   FastQuantizer.plateauCoeff = 1
#   FastQuantizer.use2xMrc = 1
#   FastQuantizer.mrcStepSize = 0.2
#   FastQuantizer.mrcIterations = 10
### cleanMRC: iters = 10 pixel costs = [9,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [40,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [50,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [13,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [9,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [7,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [1585,0] contour crossing costs = [8,0]
### cleanMRC: iters = 10 pixel costs = [96,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [60,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [51,0] contour crossing costs = [8,0]
### cleanMRC: iters = 10 pixel costs = [75,0] contour crossing costs = [8,0]
### cleanMRC: iters = 10 pixel costs = [527,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [165,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [7751,15] contour crossing costs = [403,0]
### cleanMRC: iters = 10 pixel costs = [425,0] contour crossing costs = [123,0]
### cleanMRC: iters = 10 pixel costs = [799,7] contour crossing costs = [161,0]
### cleanMRC: iters = 10 pixel costs = [494,0] contour crossing costs = [56,0]
### cleanMRC: iters = 10 pixel costs = [648,0] contour crossing costs = [144,3]
### cleanMRC: iters = 10 pixel costs = [1459,0] contour crossing costs = [326,0]
### cleanMRC: iters = 10 pixel costs = [27,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [27,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [26,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [8,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [50,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [90,0] contour crossing costs = [4,0]
### cleanMRC: iters = 10 pixel costs = [79,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [32,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [27,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [52,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [16,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [2598,0] contour crossing costs = [2,0]
### cleanMRC: iters = 10 pixel costs = [6021,29] contour crossing costs = [681,0]
### cleanMRC: iters = 10 pixel costs = [1823,0] contour crossing costs = [149,0]
### cleanMRC: iters = 10 pixel costs = [77,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [3357,2] contour crossing costs = [93,0]
### cleanMRC: iters = 10 pixel costs = [273,1] contour crossing costs = [70,0]
### cleanMRC: iters = 10 pixel costs = [337,1] contour crossing costs = [37,0]
### cleanMRC: iters = 10 pixel costs = [226,0] contour crossing costs = [20,0]
### cleanMRC: iters = 10 pixel costs = [372,1] contour crossing costs = [47,0]
### cleanMRC: iters = 10 pixel costs = [3171,19] contour crossing costs = [804,13]
### cleanMRC: iters = 10 pixel costs = [1635,2] contour crossing costs = [325,0]
### cleanMRC: iters = 10 pixel costs = [698,0] contour crossing costs = [7,0]
### cleanMRC: iters = 10 pixel costs = [16,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [45,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [859,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [14,0] contour crossing costs = [0,0]

# CostFunctional Stage QTM3
#   CostFunctional.mu = 0.2
#   CostFunctional.nu = 0.8
#   CostFunctional.tcSlope = 3
#   CostFunctional.tcUpsampleFactor = 3
#   CostFunctional.nominalOnly = 1
#   FastQuantizer.inverseTransitionCoeff = 0.2
#   FastQuantizer.singlePixelCoeff = 0.1
#   FastQuantizer.areaCoeff = 0.25
#   FastQuantizer.plateauCoeff = 1
#   FastQuantizer.use2xMrc = 1
#   FastQuantizer.mrcStepSize = 0.05
#   FastQuantizer.mrcIterations = 1
### CostFunctional take FastQuantizer MRC Step before evaluate [true]
@@@ Cached 40 of 40 kernels (12303.5 MiB GPU memory available)
@@@ Cleared 1280 MiB of Kernel Cache (14340 MiB GPU memory free).
@@@ Cleared Kernel Cache (14340.5 MiB GPU memory available)

# MRC Stage MRC2
#   FastQuantizer.singlePixelCoeff = 0.1
#   FastQuantizer.areaCoeff = 0.25
#   FastQuantizer.plateauCoeff = 1
#   FastQuantizer.use2xMrc = 1
#   FastQuantizer.mrcStepSize = 0.025
#   FastQuantizer.mrcIterations = 10
### cleanMRC: iters = 10 pixel costs = [328,0] contour crossing costs = [4,0]
### cleanMRC: iters = 10 pixel costs = [3,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [22,4] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [3,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [72,15] contour crossing costs = [12,0]
### cleanMRC: iters = 10 pixel costs = [26,0] contour crossing costs = [0,0]
@@@ Cleared 0 MiB of Kernel Cache (14344 MiB GPU memory free).
