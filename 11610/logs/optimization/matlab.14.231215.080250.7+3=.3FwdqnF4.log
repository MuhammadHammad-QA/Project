### libFMD: 2022/12/30 08:50 PST Setting Up GPU
### libFMD: maxNumCompThreads = 4
### libFMD: GPU memory max pool size is 1212.0 MiB.
### Loading config file /mnt/storage_d2s/d2suser06/releases/ILT.2023.02.ilt-cdp43/etc/tmilt_193i.toml.

# CostFunctional Stage CTM
### CostFunctional take FastQuantizer MRC Step before evaluate [false]
@@@ Cached 20 of 20 kernels (13277.6 MiB GPU memory available)
@@@ Cleared 640 MiB of Kernel Cache (14340 MiB GPU memory free).
@@@ Cleared Kernel Cache (14340.5 MiB GPU memory available)
### FastQuantizer mrcWidthSpaceIncrement set to 0.000000
### FastQuantizer mrcMaxCorrection set to 0.000000
### MRC Limts are width=12.5 space=12.5 area=500
### MRC Limts are width=12.5 space=12.5 area=500

# CostFunctional Stage QTM0
#   CostFunctional.mu = 0.01
#   CostFunctional.nu = 0.04
### CostFunctional take FastQuantizer MRC Step before evaluate [false]
@@@ Cached 20 of 20 kernels (13021.5 MiB GPU memory available)
@@@ Cleared 640 MiB of Kernel Cache (14340 MiB GPU memory free).
@@@ Cleared Kernel Cache (14340.5 MiB GPU memory available)
### FastQuantizer addMask set to 1

# CostFunctional Stage QTM1
#   CostFunctional.mu = 0.1
#   CostFunctional.nu = 0.4
#   FastQuantizer.inverseTransitionCoeff = 0.2
#   FastQuantizer.singlePixelCoeff = 0.1
### CostFunctional take FastQuantizer MRC Step before evaluate [true]
@@@ Cached 20 of 20 kernels (12957.5 MiB GPU memory available)
@@@ Cleared 640 MiB of Kernel Cache (14340 MiB GPU memory free).
@@@ Cleared Kernel Cache (14340.5 MiB GPU memory available)

# CostFunctional Stage QTM2_0
#   CostFunctional.mu = 0.2
#   CostFunctional.nu = 0.8
#   CostFunctional.tcSlope = 1.25
#   CostFunctional.tcUpsampleFactor = 3
#   FastQuantizer.inverseTransitionCoeff = 0.2
#   FastQuantizer.singlePixelCoeff = 0.1
#   FastQuantizer.areaCoeff = 1
### CostFunctional take FastQuantizer MRC Step before evaluate [true]
@@@ Cached 20 of 20 kernels (12957.5 MiB GPU memory available)
@@@ Cleared 640 MiB of Kernel Cache (14308 MiB GPU memory free).
@@@ Cleared Kernel Cache (14340.5 MiB GPU memory available)

# CostFunctional Stage QTM2_1
#   CostFunctional.mu = 0.2
#   CostFunctional.nu = 0.8
#   CostFunctional.tcSlope = 1.6
#   CostFunctional.tcUpsampleFactor = 3
#   FastQuantizer.inverseTransitionCoeff = 0.2
#   FastQuantizer.singlePixelCoeff = 0.1
#   FastQuantizer.areaCoeff = 1
### CostFunctional take FastQuantizer MRC Step before evaluate [true]
@@@ Cached 20 of 20 kernels (12957.5 MiB GPU memory available)
@@@ Cleared 640 MiB of Kernel Cache (14340 MiB GPU memory free).
@@@ Cleared Kernel Cache (14340.5 MiB GPU memory available)

# CostFunctional Stage QTM2_2
#   CostFunctional.mu = 0.2
#   CostFunctional.nu = 0.8
#   CostFunctional.tcSlope = 2
#   CostFunctional.tcUpsampleFactor = 3
#   FastQuantizer.inverseTransitionCoeff = 0.2
#   FastQuantizer.singlePixelCoeff = 0.1
#   FastQuantizer.areaCoeff = 1
### CostFunctional take FastQuantizer MRC Step before evaluate [true]
@@@ Cached 20 of 20 kernels (13021.5 MiB GPU memory available)
@@@ Cleared 640 MiB of Kernel Cache (14340 MiB GPU memory free).
@@@ Cleared Kernel Cache (14340.5 MiB GPU memory available)

# CostFunctional Stage QTM2
#   CostFunctional.mu = 0.2
#   CostFunctional.nu = 0.8
#   CostFunctional.tcSlope = 3
#   CostFunctional.tcUpsampleFactor = 3
#   FastQuantizer.inverseTransitionCoeff = 0.2
#   FastQuantizer.singlePixelCoeff = 0.1
#   FastQuantizer.areaCoeff = 1
### CostFunctional take FastQuantizer MRC Step before evaluate [true]
@@@ Cached 20 of 20 kernels (13021.5 MiB GPU memory available)
@@@ Cleared 640 MiB of Kernel Cache (14340 MiB GPU memory free).
@@@ Cleared Kernel Cache (14340.5 MiB GPU memory available)
### FastQuantizer areaWatershedFraction set to 0.500000
### FastQuantizer widthWatershedFraction set to 0.500000
### FastQuantizer spaceWatershedFraction set to 0.500000

# MRC Stage MRC1
#   FastQuantizer.singlePixelCoeff = 0.1
#   FastQuantizer.areaCoeff = 0.5
#   FastQuantizer.plateauCoeff = 1
#   FastQuantizer.use2xMrc = 1
#   FastQuantizer.mrcStepSize = 0.2
#   FastQuantizer.mrcIterations = 10
### cleanMRC: iters = 10 pixel costs = [117,0] contour crossing costs = [4,0]
### cleanMRC: iters = 10 pixel costs = [2869,0] contour crossing costs = [246,0]
### cleanMRC: iters = 10 pixel costs = [921,0] contour crossing costs = [2,0]
### cleanMRC: iters = 10 pixel costs = [53,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [226,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [861,22] contour crossing costs = [213,0]
### cleanMRC: iters = 10 pixel costs = [2538,19] contour crossing costs = [2678,0]
### cleanMRC: iters = 10 pixel costs = [4355,3] contour crossing costs = [163,13]
### cleanMRC: iters = 10 pixel costs = [316,0] contour crossing costs = [34,0]
### cleanMRC: iters = 10 pixel costs = [47,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [457,0] contour crossing costs = [24,0]
### cleanMRC: iters = 10 pixel costs = [1059,0] contour crossing costs = [301,0]
### cleanMRC: iters = 10 pixel costs = [1215,0] contour crossing costs = [355,0]
### cleanMRC: iters = 10 pixel costs = [570,5] contour crossing costs = [84,0]
### cleanMRC: iters = 10 pixel costs = [19,0] contour crossing costs = [11,0]
### cleanMRC: iters = 10 pixel costs = [580,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [90,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [79,0] contour crossing costs = [24,0]
### cleanMRC: iters = 10 pixel costs = [119,0] contour crossing costs = [16,0]
### cleanMRC: iters = 10 pixel costs = [1780,6] contour crossing costs = [206,1]
### cleanMRC: iters = 10 pixel costs = [935,3] contour crossing costs = [160,1]
### cleanMRC: iters = 10 pixel costs = [1166,0] contour crossing costs = [256,1]
### cleanMRC: iters = 10 pixel costs = [1506,1] contour crossing costs = [98,1]
### cleanMRC: iters = 10 pixel costs = [1362,3] contour crossing costs = [144,4]
### cleanMRC: iters = 10 pixel costs = [1314,6] contour crossing costs = [160,0]
### cleanMRC: iters = 10 pixel costs = [1269,8] contour crossing costs = [167,0]
### cleanMRC: iters = 10 pixel costs = [3585,203] contour crossing costs = [4581,67]
### cleanMRC: iters = 10 pixel costs = [410,0] contour crossing costs = [7,0]
### cleanMRC: iters = 10 pixel costs = [3410,1] contour crossing costs = [4,0]
### cleanMRC: iters = 10 pixel costs = [30,0] contour crossing costs = [4,0]
### cleanMRC: iters = 10 pixel costs = [3175,29] contour crossing costs = [350,0]
### cleanMRC: iters = 10 pixel costs = [22,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [2106,4] contour crossing costs = [996,3]
### cleanMRC: iters = 10 pixel costs = [821,0] contour crossing costs = [992,0]
### cleanMRC: iters = 10 pixel costs = [562,5] contour crossing costs = [118,0]
### cleanMRC: iters = 10 pixel costs = [390,0] contour crossing costs = [302,0]
### cleanMRC: iters = 10 pixel costs = [1199,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [2866,1] contour crossing costs = [508,0]
### cleanMRC: iters = 10 pixel costs = [1055,0] contour crossing costs = [275,0]
### cleanMRC: iters = 10 pixel costs = [892,0] contour crossing costs = [177,0]
### cleanMRC: iters = 10 pixel costs = [33,0] contour crossing costs = [13,0]
### cleanMRC: iters = 10 pixel costs = [16,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [187,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [11,0] contour crossing costs = [4,0]
### cleanMRC: iters = 10 pixel costs = [246,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [1499,3] contour crossing costs = [194,0]
### cleanMRC: iters = 10 pixel costs = [1094,1] contour crossing costs = [174,1]
### cleanMRC: iters = 10 pixel costs = [1403,2] contour crossing costs = [223,0]
### cleanMRC: iters = 10 pixel costs = [1132,5] contour crossing costs = [84,0]

# CostFunctional Stage QTM3
#   CostFunctional.mu = 0.2
#   CostFunctional.nu = 0.8
#   CostFunctional.tcSlope = 3
#   CostFunctional.tcUpsampleFactor = 3
#   CostFunctional.nominalOnly = 1
#   FastQuantizer.inverseTransitionCoeff = 0.2
#   FastQuantizer.singlePixelCoeff = 0.1
#   FastQuantizer.areaCoeff = 0.25
#   FastQuantizer.plateauCoeff = 1
#   FastQuantizer.use2xMrc = 1
#   FastQuantizer.mrcStepSize = 0.05
#   FastQuantizer.mrcIterations = 1
### CostFunctional take FastQuantizer MRC Step before evaluate [true]
@@@ Cached 40 of 40 kernels (12303.5 MiB GPU memory available)
@@@ Cleared 1280 MiB of Kernel Cache (14340 MiB GPU memory free).
@@@ Cleared Kernel Cache (14340.5 MiB GPU memory available)

# MRC Stage MRC2
#   FastQuantizer.singlePixelCoeff = 0.1
#   FastQuantizer.areaCoeff = 0.25
#   FastQuantizer.plateauCoeff = 1
#   FastQuantizer.use2xMrc = 1
#   FastQuantizer.mrcStepSize = 0.025
#   FastQuantizer.mrcIterations = 10
### cleanMRC: iters = 10 pixel costs = [264,0] contour crossing costs = [4,0]
### cleanMRC: iters = 10 pixel costs = [1112,1] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [2,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [14,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [31,7] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [4868,725] contour crossing costs = [3364,18]
### cleanMRC: iters = 10 pixel costs = [15,0] contour crossing costs = [8,0]
### cleanMRC: iters = 10 pixel costs = [2273,312] contour crossing costs = [49,0]
### cleanMRC: iters = 10 pixel costs = [60,0] contour crossing costs = [0,0]
### cleanMRC: iters = 10 pixel costs = [6,0] contour crossing costs = [0,0]
@@@ Cleared 0 MiB of Kernel Cache (14344 MiB GPU memory free).
